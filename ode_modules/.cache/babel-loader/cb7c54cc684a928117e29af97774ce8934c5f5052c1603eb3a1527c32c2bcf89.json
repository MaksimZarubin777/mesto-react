{"ast":null,"code":"export class Api {\n  constructor(options) {\n    this._options = options;\n    this._baseurl = this._options.baseUrl;\n    this._headers = this._options.headers;\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getProfileInfo() {\n    return fetch(`${this._baseurl}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  getInitialCard() {\n    return fetch(`${this._baseurl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  handlePutLike(cardId) {\n    return fetch(`${this._baseurl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  handleDeleteLike(cardId) {\n    return fetch(`${this._baseurl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  updateProfileInfo(data) {\n    return fetch(`${this._baseurl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.description\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseurl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseurl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  avatarUpdate(inputResult) {\n    return fetch(`${this._baseurl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputResult\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-59',\n  headers: {\n    authorization: '281df4cd-64fd-4e10-9c44-1157fa2ba97c',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_options","_baseurl","baseUrl","_headers","headers","_getResponseData","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","getInitialCard","handlePutLike","cardId","method","handleDeleteLike","updateProfileInfo","data","body","JSON","stringify","name","about","description","addNewCard","link","deleteCard","avatarUpdate","inputResult","avatar","api","authorization"],"sources":["/Users/maksim/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export class Api {\n  constructor(options) {\n    this._options = options;\n    this._baseurl = this._options.baseUrl;\n    this._headers = this._options.headers;\n  }\n\n  _getResponseData (res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfileInfo() {\n    return fetch(`${this._baseurl}/users/me`, {\n      headers: this._headers\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    })  \n  } \n\n  getInitialCard () {\n    return fetch (`${this._baseurl}/cards`, {\n      headers: this._headers\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  handlePutLike (cardId) {\n    return fetch (`${this._baseurl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  handleDeleteLike (cardId) {\n    return fetch (`${this._baseurl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  updateProfileInfo (data) {\n    return fetch(`${this._baseurl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.description,\n      })\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  addNewCard (data) {\n    return fetch(`${this._baseurl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      })\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  deleteCard (cardId) {\n    return fetch(`${this._baseurl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }\n\n  avatarUpdate (inputResult) {\n    return fetch (`${this._baseurl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputResult,\n      })\n    })\n    .then(res => {\n      return this._getResponseData(res)\n    }) \n  }  \n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-59',\n  headers: {\n    authorization: '281df4cd-64fd-4e10-9c44-1157fa2ba97c',\n    'Content-Type': 'application/json'\n  }\n}); \n\nexport default api\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}